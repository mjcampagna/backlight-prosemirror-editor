{
  "version": 3,
  "sources": ["../../crelt/index.js", "../../prosemirror-menu/dist/index.js", "../../prosemirror-inputrules/dist/index.js", "../../prosemirror-example-setup/dist/index.js"],
  "sourcesContent": ["export default function crelt() {\n  var elt = arguments[0]\n  if (typeof elt == \"string\") elt = document.createElement(elt)\n  var i = 1, next = arguments[1]\n  if (next && typeof next == \"object\" && next.nodeType == null && !Array.isArray(next)) {\n    for (var name in next) if (Object.prototype.hasOwnProperty.call(next, name)) {\n      var value = next[name]\n      if (typeof value == \"string\") elt.setAttribute(name, value)\n      else if (value != null) elt[name] = value\n    }\n    i++\n  }\n  for (; i < arguments.length; i++) add(elt, arguments[i])\n  return elt\n}\n\nfunction add(elt, child) {\n  if (typeof child == \"string\") {\n    elt.appendChild(document.createTextNode(child))\n  } else if (child == null) {\n  } else if (child.nodeType != null) {\n    elt.appendChild(child)\n  } else if (Array.isArray(child)) {\n    for (var i = 0; i < child.length; i++) add(elt, child[i])\n  } else {\n    throw new RangeError(\"Unsupported child node: \" + child)\n  }\n}\n", "import crel from 'crelt';\nimport { joinUp, lift, selectParentNode, setBlockType, wrapIn } from 'prosemirror-commands';\nimport { undo, redo } from 'prosemirror-history';\nimport { Plugin } from 'prosemirror-state';\n\nconst SVG = \"http://www.w3.org/2000/svg\";\nconst XLINK = \"http://www.w3.org/1999/xlink\";\nconst prefix$2 = \"ProseMirror-icon\";\nfunction hashPath(path) {\n    let hash = 0;\n    for (let i = 0; i < path.length; i++)\n        hash = (((hash << 5) - hash) + path.charCodeAt(i)) | 0;\n    return hash;\n}\nfunction getIcon(root, icon) {\n    let doc = (root.nodeType == 9 ? root : root.ownerDocument) || document;\n    let node = doc.createElement(\"div\");\n    node.className = prefix$2;\n    if (icon.path) {\n        let { path, width, height } = icon;\n        let name = \"pm-icon-\" + hashPath(path).toString(16);\n        if (!doc.getElementById(name))\n            buildSVG(root, name, icon);\n        let svg = node.appendChild(doc.createElementNS(SVG, \"svg\"));\n        svg.style.width = (width / height) + \"em\";\n        let use = svg.appendChild(doc.createElementNS(SVG, \"use\"));\n        use.setAttributeNS(XLINK, \"href\", /([^#]*)/.exec(doc.location.toString())[1] + \"#\" + name);\n    }\n    else if (icon.dom) {\n        node.appendChild(icon.dom.cloneNode(true));\n    }\n    else {\n        let { text, css } = icon;\n        node.appendChild(doc.createElement(\"span\")).textContent = text || '';\n        if (css)\n            node.firstChild.style.cssText = css;\n    }\n    return node;\n}\nfunction buildSVG(root, name, data) {\n    let [doc, top] = root.nodeType == 9 ? [root, root.body] : [root.ownerDocument || document, root];\n    let collection = doc.getElementById(prefix$2 + \"-collection\");\n    if (!collection) {\n        collection = doc.createElementNS(SVG, \"svg\");\n        collection.id = prefix$2 + \"-collection\";\n        collection.style.display = \"none\";\n        top.insertBefore(collection, top.firstChild);\n    }\n    let sym = doc.createElementNS(SVG, \"symbol\");\n    sym.id = name;\n    sym.setAttribute(\"viewBox\", \"0 0 \" + data.width + \" \" + data.height);\n    let path = sym.appendChild(doc.createElementNS(SVG, \"path\"));\n    path.setAttribute(\"d\", data.path);\n    collection.appendChild(sym);\n}\n\nconst prefix$1 = \"ProseMirror-menu\";\n/**\nAn icon or label that, when clicked, executes a command.\n*/\nclass MenuItem {\n    /**\n    Create a menu item.\n    */\n    constructor(\n    /**\n    The spec used to create this item.\n    */\n    spec) {\n        this.spec = spec;\n    }\n    /**\n    Renders the icon according to its [display\n    spec](https://prosemirror.net/docs/ref/#menu.MenuItemSpec.display), and adds an event handler which\n    executes the command when the representation is clicked.\n    */\n    render(view) {\n        let spec = this.spec;\n        let dom = spec.render ? spec.render(view)\n            : spec.icon ? getIcon(view.root, spec.icon)\n                : spec.label ? crel(\"div\", null, translate(view, spec.label))\n                    : null;\n        if (!dom)\n            throw new RangeError(\"MenuItem without icon or label property\");\n        if (spec.title) {\n            const title = (typeof spec.title === \"function\" ? spec.title(view.state) : spec.title);\n            dom.setAttribute(\"title\", translate(view, title));\n        }\n        if (spec.class)\n            dom.classList.add(spec.class);\n        if (spec.css)\n            dom.style.cssText += spec.css;\n        dom.addEventListener(\"mousedown\", e => {\n            e.preventDefault();\n            if (!dom.classList.contains(prefix$1 + \"-disabled\"))\n                spec.run(view.state, view.dispatch, view, e);\n        });\n        function update(state) {\n            if (spec.select) {\n                let selected = spec.select(state);\n                dom.style.display = selected ? \"\" : \"none\";\n                if (!selected)\n                    return false;\n            }\n            let enabled = true;\n            if (spec.enable) {\n                enabled = spec.enable(state) || false;\n                setClass(dom, prefix$1 + \"-disabled\", !enabled);\n            }\n            if (spec.active) {\n                let active = enabled && spec.active(state) || false;\n                setClass(dom, prefix$1 + \"-active\", active);\n            }\n            return true;\n        }\n        return { dom, update };\n    }\n}\nfunction translate(view, text) {\n    return view._props.translate ? view._props.translate(text) : text;\n}\nlet lastMenuEvent = { time: 0, node: null };\nfunction markMenuEvent(e) {\n    lastMenuEvent.time = Date.now();\n    lastMenuEvent.node = e.target;\n}\nfunction isMenuEvent(wrapper) {\n    return Date.now() - 100 < lastMenuEvent.time &&\n        lastMenuEvent.node && wrapper.contains(lastMenuEvent.node);\n}\n/**\nA drop-down menu, displayed as a label with a downwards-pointing\ntriangle to the right of it.\n*/\nclass Dropdown {\n    /**\n    Create a dropdown wrapping the elements.\n    */\n    constructor(content, \n    /**\n    @internal\n    */\n    options = {}) {\n        this.options = options;\n        this.options = options || {};\n        this.content = Array.isArray(content) ? content : [content];\n    }\n    /**\n    Render the dropdown menu and sub-items.\n    */\n    render(view) {\n        let content = renderDropdownItems(this.content, view);\n        let win = view.dom.ownerDocument.defaultView || window;\n        let label = crel(\"div\", { class: prefix$1 + \"-dropdown \" + (this.options.class || \"\"),\n            style: this.options.css }, translate(view, this.options.label || \"\"));\n        if (this.options.title)\n            label.setAttribute(\"title\", translate(view, this.options.title));\n        let wrap = crel(\"div\", { class: prefix$1 + \"-dropdown-wrap\" }, label);\n        let open = null;\n        let listeningOnClose = null;\n        let close = () => {\n            if (open && open.close()) {\n                open = null;\n                win.removeEventListener(\"mousedown\", listeningOnClose);\n            }\n        };\n        label.addEventListener(\"mousedown\", e => {\n            e.preventDefault();\n            markMenuEvent(e);\n            if (open) {\n                close();\n            }\n            else {\n                open = this.expand(wrap, content.dom);\n                win.addEventListener(\"mousedown\", listeningOnClose = () => {\n                    if (!isMenuEvent(wrap))\n                        close();\n                });\n            }\n        });\n        function update(state) {\n            let inner = content.update(state);\n            wrap.style.display = inner ? \"\" : \"none\";\n            return inner;\n        }\n        return { dom: wrap, update };\n    }\n    /**\n    @internal\n    */\n    expand(dom, items) {\n        let menuDOM = crel(\"div\", { class: prefix$1 + \"-dropdown-menu \" + (this.options.class || \"\") }, items);\n        let done = false;\n        function close() {\n            if (done)\n                return false;\n            done = true;\n            dom.removeChild(menuDOM);\n            return true;\n        }\n        dom.appendChild(menuDOM);\n        return { close, node: menuDOM };\n    }\n}\nfunction renderDropdownItems(items, view) {\n    let rendered = [], updates = [];\n    for (let i = 0; i < items.length; i++) {\n        let { dom, update } = items[i].render(view);\n        rendered.push(crel(\"div\", { class: prefix$1 + \"-dropdown-item\" }, dom));\n        updates.push(update);\n    }\n    return { dom: rendered, update: combineUpdates(updates, rendered) };\n}\nfunction combineUpdates(updates, nodes) {\n    return (state) => {\n        let something = false;\n        for (let i = 0; i < updates.length; i++) {\n            let up = updates[i](state);\n            nodes[i].style.display = up ? \"\" : \"none\";\n            if (up)\n                something = true;\n        }\n        return something;\n    };\n}\n/**\nRepresents a submenu wrapping a group of elements that start\nhidden and expand to the right when hovered over or tapped.\n*/\nclass DropdownSubmenu {\n    /**\n    Creates a submenu for the given group of menu elements. The\n    following options are recognized:\n    */\n    constructor(content, \n    /**\n    @internal\n    */\n    options = {}) {\n        this.options = options;\n        this.content = Array.isArray(content) ? content : [content];\n    }\n    /**\n    Renders the submenu.\n    */\n    render(view) {\n        let items = renderDropdownItems(this.content, view);\n        let win = view.dom.ownerDocument.defaultView || window;\n        let label = crel(\"div\", { class: prefix$1 + \"-submenu-label\" }, translate(view, this.options.label || \"\"));\n        let wrap = crel(\"div\", { class: prefix$1 + \"-submenu-wrap\" }, label, crel(\"div\", { class: prefix$1 + \"-submenu\" }, items.dom));\n        let listeningOnClose = null;\n        label.addEventListener(\"mousedown\", e => {\n            e.preventDefault();\n            markMenuEvent(e);\n            setClass(wrap, prefix$1 + \"-submenu-wrap-active\", false);\n            if (!listeningOnClose)\n                win.addEventListener(\"mousedown\", listeningOnClose = () => {\n                    if (!isMenuEvent(wrap)) {\n                        wrap.classList.remove(prefix$1 + \"-submenu-wrap-active\");\n                        win.removeEventListener(\"mousedown\", listeningOnClose);\n                        listeningOnClose = null;\n                    }\n                });\n        });\n        function update(state) {\n            let inner = items.update(state);\n            wrap.style.display = inner ? \"\" : \"none\";\n            return inner;\n        }\n        return { dom: wrap, update };\n    }\n}\n/**\nRender the given, possibly nested, array of menu elements into a\ndocument fragment, placing separators between them (and ensuring no\nsuperfluous separators appear when some of the groups turn out to\nbe empty).\n*/\nfunction renderGrouped(view, content) {\n    let result = document.createDocumentFragment();\n    let updates = [], separators = [];\n    for (let i = 0; i < content.length; i++) {\n        let items = content[i], localUpdates = [], localNodes = [];\n        for (let j = 0; j < items.length; j++) {\n            let { dom, update } = items[j].render(view);\n            let span = crel(\"span\", { class: prefix$1 + \"item\" }, dom);\n            result.appendChild(span);\n            localNodes.push(span);\n            localUpdates.push(update);\n        }\n        if (localUpdates.length) {\n            updates.push(combineUpdates(localUpdates, localNodes));\n            if (i < content.length - 1)\n                separators.push(result.appendChild(separator()));\n        }\n    }\n    function update(state) {\n        let something = false, needSep = false;\n        for (let i = 0; i < updates.length; i++) {\n            let hasContent = updates[i](state);\n            if (i)\n                separators[i - 1].style.display = needSep && hasContent ? \"\" : \"none\";\n            needSep = hasContent;\n            if (hasContent)\n                something = true;\n        }\n        return something;\n    }\n    return { dom: result, update };\n}\nfunction separator() {\n    return crel(\"span\", { class: prefix$1 + \"separator\" });\n}\n/**\nA set of basic editor-related icons. Contains the properties\n`join`, `lift`, `selectParentNode`, `undo`, `redo`, `strong`, `em`,\n`code`, `link`, `bulletList`, `orderedList`, and `blockquote`, each\nholding an object that can be used as the `icon` option to\n`MenuItem`.\n*/\nconst icons = {\n    join: {\n        width: 800, height: 900,\n        path: \"M0 75h800v125h-800z M0 825h800v-125h-800z M250 400h100v-100h100v100h100v100h-100v100h-100v-100h-100z\"\n    },\n    lift: {\n        width: 1024, height: 1024,\n        path: \"M219 310v329q0 7-5 12t-12 5q-8 0-13-5l-164-164q-5-5-5-13t5-13l164-164q5-5 13-5 7 0 12 5t5 12zM1024 749v109q0 7-5 12t-12 5h-987q-7 0-12-5t-5-12v-109q0-7 5-12t12-5h987q7 0 12 5t5 12zM1024 530v109q0 7-5 12t-12 5h-621q-7 0-12-5t-5-12v-109q0-7 5-12t12-5h621q7 0 12 5t5 12zM1024 310v109q0 7-5 12t-12 5h-621q-7 0-12-5t-5-12v-109q0-7 5-12t12-5h621q7 0 12 5t5 12zM1024 91v109q0 7-5 12t-12 5h-987q-7 0-12-5t-5-12v-109q0-7 5-12t12-5h987q7 0 12 5t5 12z\"\n    },\n    selectParentNode: { text: \"\\u2b1a\", css: \"font-weight: bold\" },\n    undo: {\n        width: 1024, height: 1024,\n        path: \"M761 1024c113-206 132-520-313-509v253l-384-384 384-384v248c534-13 594 472 313 775z\"\n    },\n    redo: {\n        width: 1024, height: 1024,\n        path: \"M576 248v-248l384 384-384 384v-253c-446-10-427 303-313 509-280-303-221-789 313-775z\"\n    },\n    strong: {\n        width: 805, height: 1024,\n        path: \"M317 869q42 18 80 18 214 0 214-191 0-65-23-102-15-25-35-42t-38-26-46-14-48-6-54-1q-41 0-57 5 0 30-0 90t-0 90q0 4-0 38t-0 55 2 47 6 38zM309 442q24 4 62 4 46 0 81-7t62-25 42-51 14-81q0-40-16-70t-45-46-61-24-70-8q-28 0-74 7 0 28 2 86t2 86q0 15-0 45t-0 45q0 26 0 39zM0 950l1-53q8-2 48-9t60-15q4-6 7-15t4-19 3-18 1-21 0-19v-37q0-561-12-585-2-4-12-8t-25-6-28-4-27-2-17-1l-2-47q56-1 194-6t213-5q13 0 39 0t38 0q40 0 78 7t73 24 61 40 42 59 16 78q0 29-9 54t-22 41-36 32-41 25-48 22q88 20 146 76t58 141q0 57-20 102t-53 74-78 48-93 27-100 8q-25 0-75-1t-75-1q-60 0-175 6t-132 6z\"\n    },\n    em: {\n        width: 585, height: 1024,\n        path: \"M0 949l9-48q3-1 46-12t63-21q16-20 23-57 0-4 35-165t65-310 29-169v-14q-13-7-31-10t-39-4-33-3l10-58q18 1 68 3t85 4 68 1q27 0 56-1t69-4 56-3q-2 22-10 50-17 5-58 16t-62 19q-4 10-8 24t-5 22-4 26-3 24q-15 84-50 239t-44 203q-1 5-7 33t-11 51-9 47-3 32l0 10q9 2 105 17-1 25-9 56-6 0-18 0t-18 0q-16 0-49-5t-49-5q-78-1-117-1-29 0-81 5t-69 6z\"\n    },\n    code: {\n        width: 896, height: 1024,\n        path: \"M608 192l-96 96 224 224-224 224 96 96 288-320-288-320zM288 192l-288 320 288 320 96-96-224-224 224-224-96-96z\"\n    },\n    link: {\n        width: 951, height: 1024,\n        path: \"M832 694q0-22-16-38l-118-118q-16-16-38-16-24 0-41 18 1 1 10 10t12 12 8 10 7 14 2 15q0 22-16 38t-38 16q-8 0-15-2t-14-7-10-8-12-12-10-10q-18 17-18 41 0 22 16 38l117 118q15 15 38 15 22 0 38-14l84-83q16-16 16-38zM430 292q0-22-16-38l-117-118q-16-16-38-16-22 0-38 15l-84 83q-16 16-16 38 0 22 16 38l118 118q15 15 38 15 24 0 41-17-1-1-10-10t-12-12-8-10-7-14-2-15q0-22 16-38t38-16q8 0 15 2t14 7 10 8 12 12 10 10q18-17 18-41zM941 694q0 68-48 116l-84 83q-47 47-116 47-69 0-116-48l-117-118q-47-47-47-116 0-70 50-119l-50-50q-49 50-118 50-68 0-116-48l-118-118q-48-48-48-116t48-116l84-83q47-47 116-47 69 0 116 48l117 118q47 47 47 116 0 70-50 119l50 50q49-50 118-50 68 0 116 48l118 118q48 48 48 116z\"\n    },\n    bulletList: {\n        width: 768, height: 896,\n        path: \"M0 512h128v-128h-128v128zM0 256h128v-128h-128v128zM0 768h128v-128h-128v128zM256 512h512v-128h-512v128zM256 256h512v-128h-512v128zM256 768h512v-128h-512v128z\"\n    },\n    orderedList: {\n        width: 768, height: 896,\n        path: \"M320 512h448v-128h-448v128zM320 768h448v-128h-448v128zM320 128v128h448v-128h-448zM79 384h78v-256h-36l-85 23v50l43-2v185zM189 590c0-36-12-78-96-78-33 0-64 6-83 16l1 66c21-10 42-15 67-15s32 11 32 28c0 26-30 58-110 112v50h192v-67l-91 2c49-30 87-66 87-113l1-1z\"\n    },\n    blockquote: {\n        width: 640, height: 896,\n        path: \"M0 448v256h256v-256h-128c0 0 0-128 128-128v-128c0 0-256 0-256 256zM640 320v-128c0 0-256 0-256 256v256h256v-256h-128c0 0 0-128 128-128z\"\n    }\n};\n/**\nMenu item for the `joinUp` command.\n*/\nconst joinUpItem = new MenuItem({\n    title: \"Join with above block\",\n    run: joinUp,\n    select: state => joinUp(state),\n    icon: icons.join\n});\n/**\nMenu item for the `lift` command.\n*/\nconst liftItem = new MenuItem({\n    title: \"Lift out of enclosing block\",\n    run: lift,\n    select: state => lift(state),\n    icon: icons.lift\n});\n/**\nMenu item for the `selectParentNode` command.\n*/\nconst selectParentNodeItem = new MenuItem({\n    title: \"Select parent node\",\n    run: selectParentNode,\n    select: state => selectParentNode(state),\n    icon: icons.selectParentNode\n});\n/**\nMenu item for the `undo` command.\n*/\nlet undoItem = new MenuItem({\n    title: \"Undo last change\",\n    run: undo,\n    enable: state => undo(state),\n    icon: icons.undo\n});\n/**\nMenu item for the `redo` command.\n*/\nlet redoItem = new MenuItem({\n    title: \"Redo last undone change\",\n    run: redo,\n    enable: state => redo(state),\n    icon: icons.redo\n});\n/**\nBuild a menu item for wrapping the selection in a given node type.\nAdds `run` and `select` properties to the ones present in\n`options`. `options.attrs` may be an object that provides\nattributes for the wrapping node.\n*/\nfunction wrapItem(nodeType, options) {\n    let passedOptions = {\n        run(state, dispatch) {\n            return wrapIn(nodeType, options.attrs)(state, dispatch);\n        },\n        select(state) {\n            return wrapIn(nodeType, options.attrs)(state);\n        }\n    };\n    for (let prop in options)\n        passedOptions[prop] = options[prop];\n    return new MenuItem(passedOptions);\n}\n/**\nBuild a menu item for changing the type of the textblock around the\nselection to the given type. Provides `run`, `active`, and `select`\nproperties. Others must be given in `options`. `options.attrs` may\nbe an object to provide the attributes for the textblock node.\n*/\nfunction blockTypeItem(nodeType, options) {\n    let command = setBlockType(nodeType, options.attrs);\n    let passedOptions = {\n        run: command,\n        enable(state) { return command(state); },\n        active(state) {\n            let { $from, to, node } = state.selection;\n            if (node)\n                return node.hasMarkup(nodeType, options.attrs);\n            return to <= $from.end() && $from.parent.hasMarkup(nodeType, options.attrs);\n        }\n    };\n    for (let prop in options)\n        passedOptions[prop] = options[prop];\n    return new MenuItem(passedOptions);\n}\n// Work around classList.toggle being broken in IE11\nfunction setClass(dom, cls, on) {\n    if (on)\n        dom.classList.add(cls);\n    else\n        dom.classList.remove(cls);\n}\n\nconst prefix = \"ProseMirror-menubar\";\nfunction isIOS() {\n    if (typeof navigator == \"undefined\")\n        return false;\n    let agent = navigator.userAgent;\n    return !/Edge\\/\\d/.test(agent) && /AppleWebKit/.test(agent) && /Mobile\\/\\w+/.test(agent);\n}\n/**\nA plugin that will place a menu bar above the editor. Note that\nthis involves wrapping the editor in an additional `<div>`.\n*/\nfunction menuBar(options) {\n    return new Plugin({\n        view(editorView) { return new MenuBarView(editorView, options); }\n    });\n}\nclass MenuBarView {\n    constructor(editorView, options) {\n        this.editorView = editorView;\n        this.options = options;\n        this.spacer = null;\n        this.maxHeight = 0;\n        this.widthForMaxHeight = 0;\n        this.floating = false;\n        this.scrollHandler = null;\n        this.root = editorView.root;\n        this.wrapper = crel(\"div\", { class: prefix + \"-wrapper\" });\n        this.menu = this.wrapper.appendChild(crel(\"div\", { class: prefix }));\n        this.menu.className = prefix;\n        if (editorView.dom.parentNode)\n            editorView.dom.parentNode.replaceChild(this.wrapper, editorView.dom);\n        this.wrapper.appendChild(editorView.dom);\n        let { dom, update } = renderGrouped(this.editorView, this.options.content);\n        this.contentUpdate = update;\n        this.menu.appendChild(dom);\n        this.update();\n        if (options.floating && !isIOS()) {\n            this.updateFloat();\n            let potentialScrollers = getAllWrapping(this.wrapper);\n            this.scrollHandler = (e) => {\n                let root = this.editorView.root;\n                if (!(root.body || root).contains(this.wrapper))\n                    potentialScrollers.forEach(el => el.removeEventListener(\"scroll\", this.scrollHandler));\n                else\n                    this.updateFloat(e.target.getBoundingClientRect ? e.target : undefined);\n            };\n            potentialScrollers.forEach(el => el.addEventListener('scroll', this.scrollHandler));\n        }\n    }\n    update() {\n        if (this.editorView.root != this.root) {\n            let { dom, update } = renderGrouped(this.editorView, this.options.content);\n            this.contentUpdate = update;\n            this.menu.replaceChild(dom, this.menu.firstChild);\n            this.root = this.editorView.root;\n        }\n        this.contentUpdate(this.editorView.state);\n        if (this.floating) {\n            this.updateScrollCursor();\n        }\n        else {\n            if (this.menu.offsetWidth != this.widthForMaxHeight) {\n                this.widthForMaxHeight = this.menu.offsetWidth;\n                this.maxHeight = 0;\n            }\n            if (this.menu.offsetHeight > this.maxHeight) {\n                this.maxHeight = this.menu.offsetHeight;\n                this.menu.style.minHeight = this.maxHeight + \"px\";\n            }\n        }\n    }\n    updateScrollCursor() {\n        let selection = this.editorView.root.getSelection();\n        if (!selection.focusNode)\n            return;\n        let rects = selection.getRangeAt(0).getClientRects();\n        let selRect = rects[selectionIsInverted(selection) ? 0 : rects.length - 1];\n        if (!selRect)\n            return;\n        let menuRect = this.menu.getBoundingClientRect();\n        if (selRect.top < menuRect.bottom && selRect.bottom > menuRect.top) {\n            let scrollable = findWrappingScrollable(this.wrapper);\n            if (scrollable)\n                scrollable.scrollTop -= (menuRect.bottom - selRect.top);\n        }\n    }\n    updateFloat(scrollAncestor) {\n        let parent = this.wrapper, editorRect = parent.getBoundingClientRect(), top = scrollAncestor ? Math.max(0, scrollAncestor.getBoundingClientRect().top) : 0;\n        if (this.floating) {\n            if (editorRect.top >= top || editorRect.bottom < this.menu.offsetHeight + 10) {\n                this.floating = false;\n                this.menu.style.position = this.menu.style.left = this.menu.style.top = this.menu.style.width = \"\";\n                this.menu.style.display = \"\";\n                this.spacer.parentNode.removeChild(this.spacer);\n                this.spacer = null;\n            }\n            else {\n                let border = (parent.offsetWidth - parent.clientWidth) / 2;\n                this.menu.style.left = (editorRect.left + border) + \"px\";\n                this.menu.style.display = editorRect.top > (this.editorView.dom.ownerDocument.defaultView || window).innerHeight\n                    ? \"none\" : \"\";\n                if (scrollAncestor)\n                    this.menu.style.top = top + \"px\";\n            }\n        }\n        else {\n            if (editorRect.top < top && editorRect.bottom >= this.menu.offsetHeight + 10) {\n                this.floating = true;\n                let menuRect = this.menu.getBoundingClientRect();\n                this.menu.style.left = menuRect.left + \"px\";\n                this.menu.style.width = menuRect.width + \"px\";\n                if (scrollAncestor)\n                    this.menu.style.top = top + \"px\";\n                this.menu.style.position = \"fixed\";\n                this.spacer = crel(\"div\", { class: prefix + \"-spacer\", style: `height: ${menuRect.height}px` });\n                parent.insertBefore(this.spacer, this.menu);\n            }\n        }\n    }\n    destroy() {\n        if (this.wrapper.parentNode)\n            this.wrapper.parentNode.replaceChild(this.editorView.dom, this.wrapper);\n    }\n}\n// Not precise, but close enough\nfunction selectionIsInverted(selection) {\n    if (selection.anchorNode == selection.focusNode)\n        return selection.anchorOffset > selection.focusOffset;\n    return selection.anchorNode.compareDocumentPosition(selection.focusNode) == Node.DOCUMENT_POSITION_FOLLOWING;\n}\nfunction findWrappingScrollable(node) {\n    for (let cur = node.parentNode; cur; cur = cur.parentNode)\n        if (cur.scrollHeight > cur.clientHeight)\n            return cur;\n}\nfunction getAllWrapping(node) {\n    let res = [node.ownerDocument.defaultView || window];\n    for (let cur = node.parentNode; cur; cur = cur.parentNode)\n        res.push(cur);\n    return res;\n}\n\nexport { Dropdown, DropdownSubmenu, MenuItem, blockTypeItem, icons, joinUpItem, liftItem, menuBar, redoItem, renderGrouped, selectParentNodeItem, undoItem, wrapItem };\n", "import { Plugin } from 'prosemirror-state';\nimport { findWrapping, canJoin } from 'prosemirror-transform';\n\n/**\nInput rules are regular expressions describing a piece of text\nthat, when typed, causes something to happen. This might be\nchanging two dashes into an emdash, wrapping a paragraph starting\nwith `\"> \"` into a blockquote, or something entirely different.\n*/\nclass InputRule {\n    /**\n    Create an input rule. The rule applies when the user typed\n    something and the text directly in front of the cursor matches\n    `match`, which should end with `$`.\n    \n    The `handler` can be a string, in which case the matched text, or\n    the first matched group in the regexp, is replaced by that\n    string.\n    \n    Or a it can be a function, which will be called with the match\n    array produced by\n    [`RegExp.exec`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/exec),\n    as well as the start and end of the matched range, and which can\n    return a [transaction](https://prosemirror.net/docs/ref/#state.Transaction) that describes the\n    rule's effect, or null to indicate the input was not handled.\n    */\n    constructor(\n    /**\n    @internal\n    */\n    match, handler, options = {}) {\n        this.match = match;\n        this.match = match;\n        this.handler = typeof handler == \"string\" ? stringHandler(handler) : handler;\n        this.undoable = options.undoable !== false;\n        this.inCode = options.inCode || false;\n        this.inCodeMark = options.inCodeMark !== false;\n    }\n}\nfunction stringHandler(string) {\n    return function (state, match, start, end) {\n        let insert = string;\n        if (match[1]) {\n            let offset = match[0].lastIndexOf(match[1]);\n            insert += match[0].slice(offset + match[1].length);\n            start += offset;\n            let cutOff = start - end;\n            if (cutOff > 0) {\n                insert = match[0].slice(offset - cutOff, offset) + insert;\n                start = end;\n            }\n        }\n        return state.tr.insertText(insert, start, end);\n    };\n}\nconst MAX_MATCH = 500;\n/**\nCreate an input rules plugin. When enabled, it will cause text\ninput that matches any of the given rules to trigger the rule's\naction.\n*/\nfunction inputRules({ rules }) {\n    let plugin = new Plugin({\n        state: {\n            init() { return null; },\n            apply(tr, prev) {\n                let stored = tr.getMeta(this);\n                if (stored)\n                    return stored;\n                return tr.selectionSet || tr.docChanged ? null : prev;\n            }\n        },\n        props: {\n            handleTextInput(view, from, to, text) {\n                return run(view, from, to, text, rules, plugin);\n            },\n            handleDOMEvents: {\n                compositionend: (view) => {\n                    setTimeout(() => {\n                        let { $cursor } = view.state.selection;\n                        if ($cursor)\n                            run(view, $cursor.pos, $cursor.pos, \"\", rules, plugin);\n                    });\n                }\n            }\n        },\n        isInputRules: true\n    });\n    return plugin;\n}\nfunction run(view, from, to, text, rules, plugin) {\n    if (view.composing)\n        return false;\n    let state = view.state, $from = state.doc.resolve(from);\n    let textBefore = $from.parent.textBetween(Math.max(0, $from.parentOffset - MAX_MATCH), $from.parentOffset, null, \"\\ufffc\") + text;\n    for (let i = 0; i < rules.length; i++) {\n        let rule = rules[i];\n        if (!rule.inCodeMark && $from.marks().some(m => m.type.spec.code))\n            continue;\n        if ($from.parent.type.spec.code) {\n            if (!rule.inCode)\n                continue;\n        }\n        else if (rule.inCode === \"only\") {\n            continue;\n        }\n        let match = rule.match.exec(textBefore);\n        let tr = match && match[0].length >= text.length &&\n            rule.handler(state, match, from - (match[0].length - text.length), to);\n        if (!tr)\n            continue;\n        if (rule.undoable)\n            tr.setMeta(plugin, { transform: tr, from, to, text });\n        view.dispatch(tr);\n        return true;\n    }\n    return false;\n}\n/**\nThis is a command that will undo an input rule, if applying such a\nrule was the last thing that the user did.\n*/\nconst undoInputRule = (state, dispatch) => {\n    let plugins = state.plugins;\n    for (let i = 0; i < plugins.length; i++) {\n        let plugin = plugins[i], undoable;\n        if (plugin.spec.isInputRules && (undoable = plugin.getState(state))) {\n            if (dispatch) {\n                let tr = state.tr, toUndo = undoable.transform;\n                for (let j = toUndo.steps.length - 1; j >= 0; j--)\n                    tr.step(toUndo.steps[j].invert(toUndo.docs[j]));\n                if (undoable.text) {\n                    let marks = tr.doc.resolve(undoable.from).marks();\n                    tr.replaceWith(undoable.from, undoable.to, state.schema.text(undoable.text, marks));\n                }\n                else {\n                    tr.delete(undoable.from, undoable.to);\n                }\n                dispatch(tr);\n            }\n            return true;\n        }\n    }\n    return false;\n};\n\n/**\nConverts double dashes to an emdash.\n*/\nconst emDash = new InputRule(/--$/, \"—\", { inCodeMark: false });\n/**\nConverts three dots to an ellipsis character.\n*/\nconst ellipsis = new InputRule(/\\.\\.\\.$/, \"…\", { inCodeMark: false });\n/**\n“Smart” opening double quotes.\n*/\nconst openDoubleQuote = new InputRule(/(?:^|[\\s\\{\\[\\(\\<'\"\\u2018\\u201C])(\")$/, \"“\", { inCodeMark: false });\n/**\n“Smart” closing double quotes.\n*/\nconst closeDoubleQuote = new InputRule(/\"$/, \"”\", { inCodeMark: false });\n/**\n“Smart” opening single quotes.\n*/\nconst openSingleQuote = new InputRule(/(?:^|[\\s\\{\\[\\(\\<'\"\\u2018\\u201C])(')$/, \"‘\", { inCodeMark: false });\n/**\n“Smart” closing single quotes.\n*/\nconst closeSingleQuote = new InputRule(/'$/, \"’\", { inCodeMark: false });\n/**\nSmart-quote related input rules.\n*/\nconst smartQuotes = [openDoubleQuote, closeDoubleQuote, openSingleQuote, closeSingleQuote];\n\n/**\nBuild an input rule for automatically wrapping a textblock when a\ngiven string is typed. The `regexp` argument is\ndirectly passed through to the `InputRule` constructor. You'll\nprobably want the regexp to start with `^`, so that the pattern can\nonly occur at the start of a textblock.\n\n`nodeType` is the type of node to wrap in. If it needs attributes,\nyou can either pass them directly, or pass a function that will\ncompute them from the regular expression match.\n\nBy default, if there's a node with the same type above the newly\nwrapped node, the rule will try to [join](https://prosemirror.net/docs/ref/#transform.Transform.join) those\ntwo nodes. You can pass a join predicate, which takes a regular\nexpression match and the node before the wrapped node, and can\nreturn a boolean to indicate whether a join should happen.\n*/\nfunction wrappingInputRule(regexp, nodeType, getAttrs = null, joinPredicate) {\n    return new InputRule(regexp, (state, match, start, end) => {\n        let attrs = getAttrs instanceof Function ? getAttrs(match) : getAttrs;\n        let tr = state.tr.delete(start, end);\n        let $start = tr.doc.resolve(start), range = $start.blockRange(), wrapping = range && findWrapping(range, nodeType, attrs);\n        if (!wrapping)\n            return null;\n        tr.wrap(range, wrapping);\n        let before = tr.doc.resolve(start - 1).nodeBefore;\n        if (before && before.type == nodeType && canJoin(tr.doc, start - 1) &&\n            (!joinPredicate || joinPredicate(match, before)))\n            tr.join(start - 1);\n        return tr;\n    });\n}\n/**\nBuild an input rule that changes the type of a textblock when the\nmatched text is typed into it. You'll usually want to start your\nregexp with `^` to that it is only matched at the start of a\ntextblock. The optional `getAttrs` parameter can be used to compute\nthe new node's attributes, and works the same as in the\n`wrappingInputRule` function.\n*/\nfunction textblockTypeInputRule(regexp, nodeType, getAttrs = null) {\n    return new InputRule(regexp, (state, match, start, end) => {\n        let $start = state.doc.resolve(start);\n        let attrs = getAttrs instanceof Function ? getAttrs(match) : getAttrs;\n        if (!$start.node(-1).canReplaceWith($start.index(-1), $start.indexAfter(-1), nodeType))\n            return null;\n        return state.tr\n            .delete(start, end)\n            .setBlockType(start, start, nodeType, attrs);\n    });\n}\n\nexport { InputRule, closeDoubleQuote, closeSingleQuote, ellipsis, emDash, inputRules, openDoubleQuote, openSingleQuote, smartQuotes, textblockTypeInputRule, undoInputRule, wrappingInputRule };\n", "import { keymap } from 'prosemirror-keymap';\nimport { undo, redo, history } from 'prosemirror-history';\nimport { toggleMark, wrapIn, chainCommands, exitCode, setBlockType, joinUp, joinDown, lift, selectParentNode, baseKeymap } from 'prosemirror-commands';\nimport { NodeSelection, Plugin } from 'prosemirror-state';\nimport { dropCursor } from 'prosemirror-dropcursor';\nimport { gapCursor } from 'prosemirror-gapcursor';\nimport { icons, wrapItem, blockTypeItem, MenuItem, Dropdown, DropdownSubmenu, joinUpItem, liftItem, selectParentNodeItem, undoItem, redoItem, menuBar } from 'prosemirror-menu';\nimport { wrapInList, splitListItem, liftListItem, sinkListItem } from 'prosemirror-schema-list';\nimport { undoInputRule, smartQuotes, ellipsis, emDash, inputRules, wrappingInputRule, textblockTypeInputRule } from 'prosemirror-inputrules';\n\nconst prefix = \"ProseMirror-prompt\";\nfunction openPrompt(options) {\n    let wrapper = document.body.appendChild(document.createElement(\"div\"));\n    wrapper.className = prefix;\n    let mouseOutside = (e) => { if (!wrapper.contains(e.target))\n        close(); };\n    setTimeout(() => window.addEventListener(\"mousedown\", mouseOutside), 50);\n    let close = () => {\n        window.removeEventListener(\"mousedown\", mouseOutside);\n        if (wrapper.parentNode)\n            wrapper.parentNode.removeChild(wrapper);\n    };\n    let domFields = [];\n    for (let name in options.fields)\n        domFields.push(options.fields[name].render());\n    let submitButton = document.createElement(\"button\");\n    submitButton.type = \"submit\";\n    submitButton.className = prefix + \"-submit\";\n    submitButton.textContent = \"OK\";\n    let cancelButton = document.createElement(\"button\");\n    cancelButton.type = \"button\";\n    cancelButton.className = prefix + \"-cancel\";\n    cancelButton.textContent = \"Cancel\";\n    cancelButton.addEventListener(\"click\", close);\n    let form = wrapper.appendChild(document.createElement(\"form\"));\n    if (options.title)\n        form.appendChild(document.createElement(\"h5\")).textContent = options.title;\n    domFields.forEach(field => {\n        form.appendChild(document.createElement(\"div\")).appendChild(field);\n    });\n    let buttons = form.appendChild(document.createElement(\"div\"));\n    buttons.className = prefix + \"-buttons\";\n    buttons.appendChild(submitButton);\n    buttons.appendChild(document.createTextNode(\" \"));\n    buttons.appendChild(cancelButton);\n    let box = wrapper.getBoundingClientRect();\n    wrapper.style.top = ((window.innerHeight - box.height) / 2) + \"px\";\n    wrapper.style.left = ((window.innerWidth - box.width) / 2) + \"px\";\n    let submit = () => {\n        let params = getValues(options.fields, domFields);\n        if (params) {\n            close();\n            options.callback(params);\n        }\n    };\n    form.addEventListener(\"submit\", e => {\n        e.preventDefault();\n        submit();\n    });\n    form.addEventListener(\"keydown\", e => {\n        if (e.keyCode == 27) {\n            e.preventDefault();\n            close();\n        }\n        else if (e.keyCode == 13 && !(e.ctrlKey || e.metaKey || e.shiftKey)) {\n            e.preventDefault();\n            submit();\n        }\n        else if (e.keyCode == 9) {\n            window.setTimeout(() => {\n                if (!wrapper.contains(document.activeElement))\n                    close();\n            }, 500);\n        }\n    });\n    let input = form.elements[0];\n    if (input)\n        input.focus();\n}\nfunction getValues(fields, domFields) {\n    let result = Object.create(null), i = 0;\n    for (let name in fields) {\n        let field = fields[name], dom = domFields[i++];\n        let value = field.read(dom), bad = field.validate(value);\n        if (bad) {\n            reportInvalid(dom, bad);\n            return null;\n        }\n        result[name] = field.clean(value);\n    }\n    return result;\n}\nfunction reportInvalid(dom, message) {\n    // FIXME this is awful and needs a lot more work\n    let parent = dom.parentNode;\n    let msg = parent.appendChild(document.createElement(\"div\"));\n    msg.style.left = (dom.offsetLeft + dom.offsetWidth + 2) + \"px\";\n    msg.style.top = (dom.offsetTop - 5) + \"px\";\n    msg.className = \"ProseMirror-invalid\";\n    msg.textContent = message;\n    setTimeout(() => parent.removeChild(msg), 1500);\n}\n/**\nThe type of field that `openPrompt` expects to be passed to it.\n*/\nclass Field {\n    /**\n    Create a field with the given options. Options support by all\n    field types are:\n    */\n    constructor(\n    /**\n    @internal\n    */\n    options) {\n        this.options = options;\n    }\n    /**\n    Read the field's value from its DOM node.\n    */\n    read(dom) { return dom.value; }\n    /**\n    A field-type-specific validation function.\n    */\n    validateType(value) { return null; }\n    /**\n    @internal\n    */\n    validate(value) {\n        if (!value && this.options.required)\n            return \"Required field\";\n        return this.validateType(value) || (this.options.validate ? this.options.validate(value) : null);\n    }\n    clean(value) {\n        return this.options.clean ? this.options.clean(value) : value;\n    }\n}\n/**\nA field class for single-line text fields.\n*/\nclass TextField extends Field {\n    render() {\n        let input = document.createElement(\"input\");\n        input.type = \"text\";\n        input.placeholder = this.options.label;\n        input.value = this.options.value || \"\";\n        input.autocomplete = \"off\";\n        return input;\n    }\n}\n\n// Helpers to create specific types of items\nfunction canInsert(state, nodeType) {\n    let $from = state.selection.$from;\n    for (let d = $from.depth; d >= 0; d--) {\n        let index = $from.index(d);\n        if ($from.node(d).canReplaceWith(index, index, nodeType))\n            return true;\n    }\n    return false;\n}\nfunction insertImageItem(nodeType) {\n    return new MenuItem({\n        title: \"Insert image\",\n        label: \"Image\",\n        enable(state) { return canInsert(state, nodeType); },\n        run(state, _, view) {\n            let { from, to } = state.selection, attrs = null;\n            if (state.selection instanceof NodeSelection && state.selection.node.type == nodeType)\n                attrs = state.selection.node.attrs;\n            openPrompt({\n                title: \"Insert image\",\n                fields: {\n                    src: new TextField({ label: \"Location\", required: true, value: attrs && attrs.src }),\n                    title: new TextField({ label: \"Title\", value: attrs && attrs.title }),\n                    alt: new TextField({ label: \"Description\",\n                        value: attrs ? attrs.alt : state.doc.textBetween(from, to, \" \") })\n                },\n                callback(attrs) {\n                    view.dispatch(view.state.tr.replaceSelectionWith(nodeType.createAndFill(attrs)));\n                    view.focus();\n                }\n            });\n        }\n    });\n}\nfunction cmdItem(cmd, options) {\n    let passedOptions = {\n        label: options.title,\n        run: cmd\n    };\n    for (let prop in options)\n        passedOptions[prop] = options[prop];\n    if (!options.enable && !options.select)\n        passedOptions[options.enable ? \"enable\" : \"select\"] = state => cmd(state);\n    return new MenuItem(passedOptions);\n}\nfunction markActive(state, type) {\n    let { from, $from, to, empty } = state.selection;\n    if (empty)\n        return !!type.isInSet(state.storedMarks || $from.marks());\n    else\n        return state.doc.rangeHasMark(from, to, type);\n}\nfunction markItem(markType, options) {\n    let passedOptions = {\n        active(state) { return markActive(state, markType); }\n    };\n    for (let prop in options)\n        passedOptions[prop] = options[prop];\n    return cmdItem(toggleMark(markType), passedOptions);\n}\nfunction linkItem(markType) {\n    return new MenuItem({\n        title: \"Add or remove link\",\n        icon: icons.link,\n        active(state) { return markActive(state, markType); },\n        enable(state) { return !state.selection.empty; },\n        run(state, dispatch, view) {\n            if (markActive(state, markType)) {\n                toggleMark(markType)(state, dispatch);\n                return true;\n            }\n            openPrompt({\n                title: \"Create a link\",\n                fields: {\n                    href: new TextField({\n                        label: \"Link target\",\n                        required: true\n                    }),\n                    title: new TextField({ label: \"Title\" })\n                },\n                callback(attrs) {\n                    toggleMark(markType, attrs)(view.state, view.dispatch);\n                    view.focus();\n                }\n            });\n        }\n    });\n}\nfunction wrapListItem(nodeType, options) {\n    return cmdItem(wrapInList(nodeType, options.attrs), options);\n}\n/**\nGiven a schema, look for default mark and node types in it and\nreturn an object with relevant menu items relating to those marks.\n*/\nfunction buildMenuItems(schema) {\n    let r = {};\n    let mark;\n    if (mark = schema.marks.strong)\n        r.toggleStrong = markItem(mark, { title: \"Toggle strong style\", icon: icons.strong });\n    if (mark = schema.marks.em)\n        r.toggleEm = markItem(mark, { title: \"Toggle emphasis\", icon: icons.em });\n    if (mark = schema.marks.code)\n        r.toggleCode = markItem(mark, { title: \"Toggle code font\", icon: icons.code });\n    if (mark = schema.marks.link)\n        r.toggleLink = linkItem(mark);\n    let node;\n    if (node = schema.nodes.image)\n        r.insertImage = insertImageItem(node);\n    if (node = schema.nodes.bullet_list)\n        r.wrapBulletList = wrapListItem(node, {\n            title: \"Wrap in bullet list\",\n            icon: icons.bulletList\n        });\n    if (node = schema.nodes.ordered_list)\n        r.wrapOrderedList = wrapListItem(node, {\n            title: \"Wrap in ordered list\",\n            icon: icons.orderedList\n        });\n    if (node = schema.nodes.blockquote)\n        r.wrapBlockQuote = wrapItem(node, {\n            title: \"Wrap in block quote\",\n            icon: icons.blockquote\n        });\n    if (node = schema.nodes.paragraph)\n        r.makeParagraph = blockTypeItem(node, {\n            title: \"Change to paragraph\",\n            label: \"Plain\"\n        });\n    if (node = schema.nodes.code_block)\n        r.makeCodeBlock = blockTypeItem(node, {\n            title: \"Change to code block\",\n            label: \"Code\"\n        });\n    if (node = schema.nodes.heading)\n        for (let i = 1; i <= 10; i++)\n            r[\"makeHead\" + i] = blockTypeItem(node, {\n                title: \"Change to heading \" + i,\n                label: \"Level \" + i,\n                attrs: { level: i }\n            });\n    if (node = schema.nodes.horizontal_rule) {\n        let hr = node;\n        r.insertHorizontalRule = new MenuItem({\n            title: \"Insert horizontal rule\",\n            label: \"Horizontal rule\",\n            enable(state) { return canInsert(state, hr); },\n            run(state, dispatch) { dispatch(state.tr.replaceSelectionWith(hr.create())); }\n        });\n    }\n    let cut = (arr) => arr.filter(x => x);\n    r.insertMenu = new Dropdown(cut([r.insertImage, r.insertHorizontalRule]), { label: \"Insert\" });\n    r.typeMenu = new Dropdown(cut([r.makeParagraph, r.makeCodeBlock, r.makeHead1 && new DropdownSubmenu(cut([\n            r.makeHead1, r.makeHead2, r.makeHead3, r.makeHead4, r.makeHead5, r.makeHead6\n        ]), { label: \"Heading\" })]), { label: \"Type...\" });\n    r.inlineMenu = [cut([r.toggleStrong, r.toggleEm, r.toggleCode, r.toggleLink])];\n    r.blockMenu = [cut([r.wrapBulletList, r.wrapOrderedList, r.wrapBlockQuote, joinUpItem,\n            liftItem, selectParentNodeItem])];\n    r.fullMenu = r.inlineMenu.concat([[r.insertMenu, r.typeMenu]], [[undoItem, redoItem]], r.blockMenu);\n    return r;\n}\n\nconst mac = typeof navigator != \"undefined\" ? /Mac|iP(hone|[oa]d)/.test(navigator.platform) : false;\n/**\nInspect the given schema looking for marks and nodes from the\nbasic schema, and if found, add key bindings related to them.\nThis will add:\n\n* **Mod-b** for toggling [strong](https://prosemirror.net/docs/ref/#schema-basic.StrongMark)\n* **Mod-i** for toggling [emphasis](https://prosemirror.net/docs/ref/#schema-basic.EmMark)\n* **Mod-`** for toggling [code font](https://prosemirror.net/docs/ref/#schema-basic.CodeMark)\n* **Ctrl-Shift-0** for making the current textblock a paragraph\n* **Ctrl-Shift-1** to **Ctrl-Shift-Digit6** for making the current\n  textblock a heading of the corresponding level\n* **Ctrl-Shift-Backslash** to make the current textblock a code block\n* **Ctrl-Shift-8** to wrap the selection in an ordered list\n* **Ctrl-Shift-9** to wrap the selection in a bullet list\n* **Ctrl->** to wrap the selection in a block quote\n* **Enter** to split a non-empty textblock in a list item while at\n  the same time splitting the list item\n* **Mod-Enter** to insert a hard break\n* **Mod-_** to insert a horizontal rule\n* **Backspace** to undo an input rule\n* **Alt-ArrowUp** to `joinUp`\n* **Alt-ArrowDown** to `joinDown`\n* **Mod-BracketLeft** to `lift`\n* **Escape** to `selectParentNode`\n\nYou can suppress or map these bindings by passing a `mapKeys`\nargument, which maps key names (say `\"Mod-B\"` to either `false`, to\nremove the binding, or a new key name string.\n*/\nfunction buildKeymap(schema, mapKeys) {\n    let keys = {}, type;\n    function bind(key, cmd) {\n        if (mapKeys) {\n            let mapped = mapKeys[key];\n            if (mapped === false)\n                return;\n            if (mapped)\n                key = mapped;\n        }\n        keys[key] = cmd;\n    }\n    bind(\"Mod-z\", undo);\n    bind(\"Shift-Mod-z\", redo);\n    bind(\"Backspace\", undoInputRule);\n    if (!mac)\n        bind(\"Mod-y\", redo);\n    bind(\"Alt-ArrowUp\", joinUp);\n    bind(\"Alt-ArrowDown\", joinDown);\n    bind(\"Mod-BracketLeft\", lift);\n    bind(\"Escape\", selectParentNode);\n    if (type = schema.marks.strong) {\n        bind(\"Mod-b\", toggleMark(type));\n        bind(\"Mod-B\", toggleMark(type));\n    }\n    if (type = schema.marks.em) {\n        bind(\"Mod-i\", toggleMark(type));\n        bind(\"Mod-I\", toggleMark(type));\n    }\n    if (type = schema.marks.code)\n        bind(\"Mod-`\", toggleMark(type));\n    if (type = schema.nodes.bullet_list)\n        bind(\"Shift-Ctrl-8\", wrapInList(type));\n    if (type = schema.nodes.ordered_list)\n        bind(\"Shift-Ctrl-9\", wrapInList(type));\n    if (type = schema.nodes.blockquote)\n        bind(\"Ctrl->\", wrapIn(type));\n    if (type = schema.nodes.hard_break) {\n        let br = type, cmd = chainCommands(exitCode, (state, dispatch) => {\n            if (dispatch)\n                dispatch(state.tr.replaceSelectionWith(br.create()).scrollIntoView());\n            return true;\n        });\n        bind(\"Mod-Enter\", cmd);\n        bind(\"Shift-Enter\", cmd);\n        if (mac)\n            bind(\"Ctrl-Enter\", cmd);\n    }\n    if (type = schema.nodes.list_item) {\n        bind(\"Enter\", splitListItem(type));\n        bind(\"Mod-[\", liftListItem(type));\n        bind(\"Mod-]\", sinkListItem(type));\n    }\n    if (type = schema.nodes.paragraph)\n        bind(\"Shift-Ctrl-0\", setBlockType(type));\n    if (type = schema.nodes.code_block)\n        bind(\"Shift-Ctrl-\\\\\", setBlockType(type));\n    if (type = schema.nodes.heading)\n        for (let i = 1; i <= 6; i++)\n            bind(\"Shift-Ctrl-\" + i, setBlockType(type, { level: i }));\n    if (type = schema.nodes.horizontal_rule) {\n        let hr = type;\n        bind(\"Mod-_\", (state, dispatch) => {\n            if (dispatch)\n                dispatch(state.tr.replaceSelectionWith(hr.create()).scrollIntoView());\n            return true;\n        });\n    }\n    return keys;\n}\n\n/**\nGiven a blockquote node type, returns an input rule that turns `\"> \"`\nat the start of a textblock into a blockquote.\n*/\nfunction blockQuoteRule(nodeType) {\n    return wrappingInputRule(/^\\s*>\\s$/, nodeType);\n}\n/**\nGiven a list node type, returns an input rule that turns a number\nfollowed by a dot at the start of a textblock into an ordered list.\n*/\nfunction orderedListRule(nodeType) {\n    return wrappingInputRule(/^(\\d+)\\.\\s$/, nodeType, match => ({ order: +match[1] }), (match, node) => node.childCount + node.attrs.order == +match[1]);\n}\n/**\nGiven a list node type, returns an input rule that turns a bullet\n(dash, plush, or asterisk) at the start of a textblock into a\nbullet list.\n*/\nfunction bulletListRule(nodeType) {\n    return wrappingInputRule(/^\\s*([-+*])\\s$/, nodeType);\n}\n/**\nGiven a code block node type, returns an input rule that turns a\ntextblock starting with three backticks into a code block.\n*/\nfunction codeBlockRule(nodeType) {\n    return textblockTypeInputRule(/^```$/, nodeType);\n}\n/**\nGiven a node type and a maximum level, creates an input rule that\nturns up to that number of `#` characters followed by a space at\nthe start of a textblock into a heading whose level corresponds to\nthe number of `#` signs.\n*/\nfunction headingRule(nodeType, maxLevel) {\n    return textblockTypeInputRule(new RegExp(\"^(#{1,\" + maxLevel + \"})\\\\s$\"), nodeType, match => ({ level: match[1].length }));\n}\n/**\nA set of input rules for creating the basic block quotes, lists,\ncode blocks, and heading.\n*/\nfunction buildInputRules(schema) {\n    let rules = smartQuotes.concat(ellipsis, emDash), type;\n    if (type = schema.nodes.blockquote)\n        rules.push(blockQuoteRule(type));\n    if (type = schema.nodes.ordered_list)\n        rules.push(orderedListRule(type));\n    if (type = schema.nodes.bullet_list)\n        rules.push(bulletListRule(type));\n    if (type = schema.nodes.code_block)\n        rules.push(codeBlockRule(type));\n    if (type = schema.nodes.heading)\n        rules.push(headingRule(type, 6));\n    return inputRules({ rules });\n}\n\n/**\nCreate an array of plugins pre-configured for the given schema.\nThe resulting array will include the following plugins:\n\n * Input rules for smart quotes and creating the block types in the\n   schema using markdown conventions (say `\"> \"` to create a\n   blockquote)\n\n * A keymap that defines keys to create and manipulate the nodes in the\n   schema\n\n * A keymap binding the default keys provided by the\n   prosemirror-commands module\n\n * The undo history plugin\n\n * The drop cursor plugin\n\n * The gap cursor plugin\n\n * A custom plugin that adds a `menuContent` prop for the\n   prosemirror-menu wrapper, and a CSS class that enables the\n   additional styling defined in `style/style.css` in this package\n\nProbably only useful for quickly setting up a passable\neditor—you'll need more control over your settings in most\nreal-world situations.\n*/\nfunction exampleSetup(options) {\n    let plugins = [\n        buildInputRules(options.schema),\n        keymap(buildKeymap(options.schema, options.mapKeys)),\n        keymap(baseKeymap),\n        dropCursor(),\n        gapCursor()\n    ];\n    if (options.menuBar !== false)\n        plugins.push(menuBar({ floating: options.floatingMenu !== false,\n            content: options.menuContent || buildMenuItems(options.schema).fullMenu }));\n    if (options.history !== false)\n        plugins.push(history());\n    return plugins.concat(new Plugin({\n        props: {\n            attributes: { class: \"ProseMirror-example-setup-style\" }\n        }\n    }));\n}\n\nexport { buildInputRules, buildKeymap, buildMenuItems, exampleSetup };\n"],
  "mappings": "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",
  "names": ["update", "prefix", "attrs"]
}
